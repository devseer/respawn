// Generated by CoffeeScript 1.6.3
(function() {
  var Engine, Map, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  Engine = (function() {
    Engine.prototype.handle = {};

    function Engine(canvas, bgm, sfx) {
      this.handle = {
        canvas: canvas,
        bgm: bgm,
        sfx: sfx
      };
      this.map = new Map();
      this.main(this);
    }

    Engine.prototype.update = function() {
      return this.map.update();
    };

    Engine.prototype.draw = function(handle) {
      return this.map.draw(handle);
    };

    Engine.prototype.main = function(c) {
      var _this = this;
      c.update();
      c.draw(c.handle);
      return requestAnimationFrame(function() {
        return _this.main(c);
      });
    };

    return Engine;

  })();

  if (!root.Game) {
    root.Game = Engine;
  }

  Map = (function() {
    function Map() {
      var height, i, j, width;
      height = 100;
      width = 100;
      this.viewport = {
        x: 0,
        y: 0,
        height: 9,
        width: 9
      };
      this.data = (function() {
        var _i, _results;
        _results = [];
        for (i = _i = 0; 0 <= width ? _i < width : _i > width; i = 0 <= width ? ++_i : --_i) {
          _results.push((function() {
            var _j, _results1;
            _results1 = [];
            for (j = _j = 0; 0 <= height ? _j < height : _j > height; j = 0 <= height ? ++_j : --_j) {
              _results1.push('.');
            }
            return _results1;
          })());
        }
        return _results;
      })();
    }

    Map.prototype.update = function() {};

    Map.prototype.draw = function(handle) {
      var center, i, j, output, _i, _j, _ref, _ref1, _ref2, _ref3;
      output = '';
      center = {
        x: this.viewport.x + this.viewport.width >> 1,
        y: this.viewport.y + this.viewport.height >> 1
      };
      for (i = _i = _ref = this.viewport.x, _ref1 = this.viewport.x + this.viewport.width; _ref <= _ref1 ? _i < _ref1 : _i > _ref1; i = _ref <= _ref1 ? ++_i : --_i) {
        for (j = _j = _ref2 = this.viewport.y, _ref3 = this.viewport.y + this.viewport.height; _ref2 <= _ref3 ? _j < _ref3 : _j > _ref3; j = _ref2 <= _ref3 ? ++_j : --_j) {
          output += ((i === center.x && j === center.y) && '@' || this.data[i][j]) + ' ';
        }
        output += '\n';
      }
      return document.body.innerHTML = output;
    };

    return Map;

  })();

}).call(this);
